let lineLength = 0;
let angle = 0;
let angleSpeed = 1;
let size = 1;

// d3 4.0 doesn't have scale yet 
let hue = function(value){
  let high = Math.sqrt(Math.pow(window.innerWidth, 2) + Math.pow(window.innerHeight, 2));
  let low = 360;
  return low*value/high;
}

let svg = d3.select('body').append('svg')
.attr('height', window.innerHeight)
.attr('width', window.innerWidth)
.call(d3.drag(dragStarted)
        .container(function() { return this; })
        .subject(function() { var p = [d3.event.x, d3.event.y]; return [p, p]; }));

function dragStarted(){
  let d = d3.event.subject;
  let container = svg.append('g').datum(d);
  let x0 = d3.event.x;
  let y0 = d3.event.y;
  
  d3.event.on("drag", function() {
    let x = d3.event.x;
    let y = d3.event.y;
    let dx = x - x0;
    let dy = y - y0;
    
    let distance = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));

    container.append('line')
             .attr("transform", `translate(${x}, ${y}) rotate(${angle})`)
             .attr('x1', 0)
             .attr('y1', 0)
             .attr('x2', dx*size + 3)
             .attr('y2', dy*size + 3)
             .style('stroke', d3.hsl(hue(distance), 0.8, 0.5));
    angle += angleSpeed;
  }); 
}

d3.select('#clear').on('click', ()=>{
  d3.selectAll('g').remove();
})

d3.select('#range').on('change', ()=>{
  size = d3.event.target.value/100;
})